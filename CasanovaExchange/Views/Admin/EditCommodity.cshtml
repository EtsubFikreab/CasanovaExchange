@using CasanovaExchange.ViewModel
@using CasanovaExchange.Models;
@model CommodityListingViewModel
@{
	Commodity commodity = Model.commodity;
	ViewBag.Title = "Commodity Listings";
}
<h3>@commodity.Name</h3>
<h5>@commodity.Symbol</h5>

<div class="container d-flex justify-content-between">
	<div class="commodity-left-container d-flex flex-column">
		<div id="commodity-image-container">
			<img src="@commodity.CommodityImagePath" />
		</div>
		<div class="About-commodity">
			<div class="About-commodity-top">
				<h4>About</h4>
				<p>
					@commodity.Description
				</p>
			</div>
			<div class="d-flex justify-content-sm-around text-center">
				<div class="about-item">
					<div class="fw-bold">WareHouse</div>
					@commodity.CommodityWarehouse.Name
					@commodity.CommodityWarehouse.WarehouseCode
				</div>
				<div class="about-item">
					<div class="fw-bold">Production Year</div>
					@commodity.ProductionYear
				</div>
				<div class="about-item">
					<div class="fw-bold">Description</div>
					@commodity.Description
				</div>
			</div>
		</div>
	</div>
	<div class="order-commodity">
		<div class="sell-buy-buttons d-flex justify-content-around w-75 bg-dark ">
			<button id="sell-commodity-button">Edit</button>
			<button id="buy-commodity-button">Delete</button>
		</div>
		<div id="buy-commodity">
			<form class="commodity-form d-flex flex-column justify-content-around" asp-controller="Trade" asp-action="BuyCommodity" enctype="multipart/form-data" method="post">
				<input hidden asp-for="commodity.Id" />
				<input type="submit" value="Delete Commodity" class="btn btn-primary bm-2" />
			</form>
		</div>
		<div id="sell-commodity">
			<form class="commodity-form sell-commodity-form d-flex flex-column justify-content-around" asp-controller="Admin" asp-action="EditCommodity" enctype="multipart/form-data" method="post">
				<input hidden asp-for="commodity.Id" />
				<div class="d-flex flex-column">
					<label asp-for="commodity.Name" class=""></label>
					<input asp-for="commodity.Name" class="" />
				</div>
				<div class="d-flex flex-column">
					<label asp-for="commodity.Symbol" class=""></label>
					<input asp-for="commodity.Symbol" class="" />
				</div>
				<div class="d-flex flex-column">
					<label asp-for="commodity.Description" class=""></label>
					<input asp-for="commodity.Description" class="" />
				</div>
				<div class="d-flex flex-column">
					<label asp-for="commodity.ProductionYear" class=""></label>
					<input asp-for="commodity.ProductionYear" class="" />
				</div>
				<div class="d-flex flex-column">
					<label asp-for="commodity.CommodityWarehouse.WarehouseCode" class=""></label>
					<input asp-for="commodity.CommodityWarehouse.WarehouseCode" class="" />
				</div>
				<input type="submit" value="Confirm" class="btn btn-primary bm-2" />
			</form>
		</div>
	</div>
</div>

<style>
	img {
		max-width: 3ch;
	}

	#search-input {
		margin-top: 2ch;
		margin-bottom: 1ch;
		border-radius: 5px;
		padding-left: 2ch;
		padding-top: 5px;
		padding-bottom: 5px;
		width: 20vw;
	}
</style>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
	$(document).ready(function () {
		$("#search-input").on("keyup", function () {
			var value = $(this).val().toLowerCase();
			$("#Commodity-table tr").filter(function () {
				$(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
			});
		});
	});

	$(function () {
		const ths = $("th");
		let sortOrder = 1;

		ths.on("click", function () {
			const rows = sortRows(this);
			rebuildTbody(rows);
			updateClassName(this);
			sortOrder *= -1;
		})

		function sortRows(th) {
			const rows = $.makeArray($('tbody > tr'));
			const col = th.cellIndex;
			const type = th.dataset.type;
			rows.sort(function (a, b) {
				return compare(a, b, col, type) * sortOrder;
			});
			return rows;
		}

		function compare(a, b, col, type) {
			let _a = a.children[col].textContent;
			let _b = b.children[col].textContent;
			if (type === "number") {
				_a *= 1;
				_b *= 1;
			} else if (type === "string") {
				_a = _a.toLowerCase();
				_b = _b.toLowerCase();
			}

			if (_a < _b) {
				return -1;
			}
			if (_a > _b) {
				return 1;
			}
			return 0;
		}

		function rebuildTbody(rows) {
			const tbody = $("tbody");
			while (tbody.firstChild) {
				tbody.remove(tbody.firstChild);
			}

			let j;
			for (j = 0; j < rows.length; j++) {
				tbody.append(rows[j]);
			}
		}

		function updateClassName(th) {
			let k;
			for (k = 0; k < ths.length; k++) {
				ths[k].className = "";
			}
			th.className = sortOrder === 1 ? "asc" : "desc";
		}

	});
</script>


<style>
	.container {
		height: 50ch;
		margin-top: 3ch;
		margin-bottom: 4ch;
	}

	.commodity-left-container {
	}

	#commodity-image-container {
		background-color: #2E4057;
		height: 28ch;
		border-radius: 10px;
		margin-bottom: 30px;
		box-shadow: black 0px 4px 12px;
		display: flex;
		justify-content: center;
	}

		#commodity-image-container img {
			max-width: 400px;
			max-height: 28ch;
			margin-inline: auto;
		}

	.About-commodity {
		background-color: #2E4057;
		border-radius: 10px;
		padding: 1ch;
		padding-top: 2ch;
		padding-bottom: 1ch;
		box-shadow: black 0px 4px 12px;
		width: 45vw;
	}

	.About-commodity-top {
		padding-inline: 4ch;
	}

		.About-commodity-top p {
			margin-bottom: 3ch;
		}

	.order-commodity {
		background-color: #2E4057;
		border-radius: 10px;
		box-shadow: black 0px 4px 12px;
		height: 50ch;
		width: 20vw;
		padding: 2ch;
	}

	.sell-buy-buttons {
		margin-inline: auto;
		margin-bottom: 2ch;
		padding: 4px;
		padding-top: 6px;
		padding-bottom: 6px;
		border-radius: 15px;
	}

		.sell-buy-buttons button {
			color: aliceblue;
			width: 10ch;
			border-radius: 10px;
			padding: 1ch;
			font-weight: 600;
			background-color: #2E4057;
			border: 0 solid black;
		}

			.sell-buy-buttons button:checked {
				background-color: aqua;
			}

	.commodity-form {
		height: 25ch;
		align-items: center;
	}

		.commodity-form div {
			align-items: center;
		}

			.commodity-form div label {
				margin-bottom: 1ch;
			}

	.sell-commodity-form {
		height: 30 ch;
	}

	#buy-commodity {
		display: none;
	}

	.active {
		background-color: #00ff00;
	}

	.fade {
		opacity: 0.5 !important;
		transition: opacity 0.5s;
	}

	.buy-sell-drop {
		margin-bottom: 10ch;
	}
</style>

<script>
	$("#sell-commodity-button").addClass("active");

	$(".sell-buy-buttons").addClass("buy-sell-drop");
	$(".order-commodity").addClass(".sell-container-drop");
	
	$("#buy-commodity-button").addClass("fade");

	$("#sell-commodity-button").click(function () {
		$("#buy-commodity").hide();
		$("#sell-commodity").show();

		$("#sell-commodity-button").addClass("active");
		$("#sell-commodity-button").removeClass("fade");
		$("#buy-commodity-button").removeClass("active");
		$("#buy-commodity-button").addClass("fade");
	});
	$("#buy-commodity-button").click(function () {
		$("#sell-commodity").hide();
		$("#buy-commodity").show();

		$("#buy-commodity-button").addClass("active");
		$("#buy-commodity-button").removeClass("fade");
		$("#sell-commodity-button").removeClass("active");
		$("#sell-commodity-button").addClass("fade");
	});
</script>